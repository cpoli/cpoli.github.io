.. chain_tb documentation master file, created by
   sphinx-quickstart on Sat Apr 18 18:56:08 2015.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.


PT-symmetry / PT-symmetry breaking
***********************************


These examples illustrate the PT-symmetry and the PT-symmetry breaking.

.. note::
    Throughout the examples, the hoppings :math:`ta` and :math:`tb` are real and the onsites energies are purely imaginary with :math:`\epsilon_a=i\gamma` and :math:`\epsilon_b=-i\gamma`. Then, the A sites are amplified (positive imaginary part) and the B sites are absorbed.


.. toctree::
    :titlesonly:

Dimer
======

.. image:: ../figs/n2_ta(1+0j)_tb(1+0j)_ea0j_eb0j/lattice.png
    :height: 80px
    :width:  100%
    :align: center

The Hamiltian reads

.. math::

    \left( \begin{array}{cc}
    i\gamma & t \\
    t & i\gamma \end{array} \right)

Hermitian case
--------------
In the case :math:`\gamma=0`, the eigenenergies are real and given by: :math:`E_\pm=\pm t`.

.. code-block:: python

    from chain_tb import *
    ch = chain_tb(sites=2, ta=1., tb=1., ea=0, eb=0)
    ch.plt_lattice(ms=60, coef=12., legend=False, save=True)
    ch.get_eig()
    ch.plt_spec(ms=20, fs=20, save=True)
    ch.get_propagation(psi_init=[0., 1.], steps=800, dz=0.02, norm='int')
    ch.plt_propagation(type_plt='int', save=True)
    ch.plt_intensity(ind=[0, 1], color=['b', 'r'], fs=20, save=True)
    ch.plt_show()

.. image:: ../figs/n2_ta(1+0j)_tb(1+0j)_ea0j_eb0j/spec.png
    :width: 55%
    :align: center

.. image:: ../figs/n2_ta(1+0j)_tb(1+0j)_ea0j_eb0j/intensity.png
    :width: 45%

.. image:: ../figs/n2_ta(1+0j)_tb(1+0j)_ea0j_eb0j/propagation.png
    :width: 45%



Non-Hermitian case
-------------------

In the case :math:`\gamma\neq0`, the eigenenergies are given by: :math:`E_\pm=\pm \sqrt{t^2-|\gamma|^2}`. As the result, they are real if :math:`t>\gamma`, degenerated if :math:`t=\gamma`, and complex if :math:`t<\gamma`.

.. note::

    This example shows that a non-Hermitian matrix can have a real spectrum.

If the eigenenergies are real (:math:`t>\gamma`) the system displays the PT-symmetry, if they are complex, the PT-symmetry is broken (:math:`t<\gamma`), :math:`\gamma` represents the PT-symmetry breaking point. In the following, we will consider each case separately.



PT-symmetry
-----------------

Below the PT-symmetry breaking point, the eigenenergies are real: :math:`E_\pm=\pm \sqrt{t^2-|\gamma|^2}`.

.. code-block:: python

    from chain_tb import *
    ch = chain_tb(sites=2, ta=1., tb=1., ea=.8j, eb=-.8j)
    ch.get_eig()
    ch.plt_spec(ms=20, fs=20, save=True)
    ch.get_propagation(psi_init=[0., 1.], steps=500, dz=0.05, norm='int')
    ch.plt_propagation(type_plt='int',save=True)
    ch.plt_intensity(ind=[0, 1], color=['b', 'r'], fs=20, save=True)
    ch.plt_show()

.. image:: ../figs/n2_ta(1+0j)_tb(1+0j)_ea0,8j_eb-0,8j/spec.png
    :width: 55%
    :align: center

.. image:: ../figs/n2_ta(1+0j)_tb(1+0j)_ea0,8j_eb-0,8j/intensity.png
    :width: 45%

.. image:: ../figs/n2_ta(1+0j)_tb(1+0j)_ea0,8j_eb-0,8j/propagation.png
    :width: 45%


breaking point
-----------------

At the breaking point, :math:`\gamma=t`, the eigenenergies coincide: :math:`E_\pm=0`.

.. code-block:: python

    from chain_tb import *
    from numpy import ones, zeros
    ch = chain_tb(sites=2, ta=1., tb=1., ea=1j, eb=-1j)
    ch.get_eig()
    ch.plt_spec(ms=20, fs=20, save=True)
    psi_init = ones(ch.sites)/sqrt(ch.sites)
    ch.get_propagation(psi_init, steps=1500, dz=0.05, norm='int')
    ch.plt_propagation(type_plt='int', save=True)
    ch.plt_intensity(ind=[0., 1.], color=['b', 'r'], fs=20, save=True)
    ch.plt_show()

.. image:: ../figs/n2_ta(1+0j)_tb(1+0j)_ea1j_eb-1j/spec.png
    :width: 55%
    :align: center

.. image:: ../figs/n2_ta(1+0j)_tb(1+0j)_ea1j_eb-1j/intensity.png
    :width: 45%

.. image:: ../figs/n2_ta(1+0j)_tb(1+0j)_ea1j_eb-1j/propagation.png
    :width: 45%


broken PT-symmetry
-------------------

Above the PT-symmetry breaking point, :math:`\gamma>t`, the eigenenergies are complex: :math:`E_\pm= \pm i \sqrt{\gamma^2-t^2}`.



.. code-block:: python

    from chain_tb import *
    ch = chain_tb(sites=2, ta=1., tb=1., ea=1.2j, eb=-1.2j)
    ch.get_eig()
    ch.plt_spec(ms=20, fs=20, save=True)
    ch.get_propagation(psi_init=[0., 1.], steps=500, dz=0.05, norm='int')
    ch.plt_propagation(type_plt='int', save=True)
    ch.plt_intensity(ind=[0, 1], color=['b', 'r'], fs=20, save=True)
    ch.plt_show()


.. image:: ../figs/n2_ta(1+0j)_tb(1+0j)_ea1,2j_eb-1,2j/spec.png
    :width: 55%
    :align: center

.. image:: ../figs/n2_ta(1+0j)_tb(1+0j)_ea1,2j_eb-1,2j/intensity.png
    :width: 45%

.. image:: ../figs/n2_ta(1+0j)_tb(1+0j)_ea1,2j_eb-1,2j/propagation.png
    :width: 45%

Dimer chain
===========


The chain is composed of :math:`n` dimers *i.e.* :math:`n` sites A and :math:`n` sites B. The chain starts with a A site and ends with a B site.

.. image:: ../figs/n20_ta(1+0j)_tb(1+0j)_ea0j_eb0j/lattice.png
    :height: 80px
    :width:  100%
    :align: center

Hermitian case
--------------

.. code-block:: python

    from chain_tb import * # import chain_tb model class

    ch = chain_tb(sites=20, ta=1., tb=1., ea=0., eb=0.)
    ch.plt_lattice(ms=15, coef=4., save=True)
    ch.get_eig()
    ch.plt_spec(ms=10, fs=20, save=True)
    from numpy import ones, sqrt
    psi_init = np.ones(ch.sites)/np.sqrt(ch.sites)
    print((np.abs(psi_init)**2).sum())
    ch.get_propagation(psi_init=psi_init, steps=1500, dz=0.05, norm='int')
    ch.plt_propagation(type_plt='int', save=True)
    ch.plt_show()

.. image:: ../figs/n20_ta(1+0j)_tb(1+0j)_ea0j_eb0j/spec.png
    :width: 45%

.. image:: ../figs/n20_ta(1+0j)_tb(1+0j)_ea0j_eb0j/propagation.png
    :width: 45%

PT symmetry
------------

Below the transition

.. code-block:: python

    from chain_tb import * # import chain_tb model class

    #identical hoppings are obtained by setting ta = tb.
    ch = chain_tb(sites=20, ta=1., tb=1., ea=0.1j, eb=-0.1j)
    ch.plt_lattice(ms=15, coef=4., save=True)
    ch.get_eig()
    ch.plt_spec(ms=10, fs=20, save=True)
    from numpy import ones, sqrt
    psi_init = np.ones(ch.sites)/np.sqrt(ch.sites)
    print((np.abs(psi_init)**2).sum())
    ch.get_propagation(psi_init=psi_init, steps=1500, dz=0.05, norm='int')
    ch.plt_propagation(type_plt='int', save=True)
    ch.plt_show()

.. image:: ../figs/n20_ta(1+0j)_tb(1+0j)_ea0,1j_eb-0,1j/spec.png
    :width: 45%

.. image:: ../figs/n20_ta(1+0j)_tb(1+0j)_ea0,1j_eb-0,1j/propagation.png
    :width: 45%


broken PT symmetry
------------------

.. code-block:: python

    from chain_tb import * # import chain_tb model class

    ch = chain_tb(sites=20, ta=1., tb=1., ea=0.2j, eb=-0.2j)
    ch.plt_lattice(ms=15, coef=4., save=True)
    ch.get_eig()
    ch.plt_spec(ms=10, fs=20, save=True)
    ch.get_intensity_selec(selection='max_pola')
    ch.plt_intensity_selec(ms=15, fs=20, add='Max', save=True)
    ch.get_intensity_selec(selection='min_pola')
    ch.plt_intensity_selec(ms=15, fs=20, add='Min', save=True)
    from numpy import ones, sqrt
    psi_init = np.ones(ch.sites)/np.sqrt(ch.sites)
    print((np.abs(psi_init)**2).sum())
    ch.get_propagation(psi_init=psi_init, steps=1500, dz=0.05, norm='int')
    ch.plt_propagation(type_plt='int', save=True)
    ch.plt_show()

.. image:: ../figs/n20_ta(1+0j)_tb(1+0j)_ea0,2j_eb-0,2j/spec.png
    :width: 55%
    :align: center

.. image:: ../figs/n20_ta(1+0j)_tb(1+0j)_ea0,2j_eb-0,2j/statesMax.png
    :width: 45%

.. image:: ../figs/n20_ta(1+0j)_tb(1+0j)_ea0,2j_eb-0,2j/statesMin.png
    :width: 45%

.. image:: ../figs/n20_ta(1+0j)_tb(1+0j)_ea0,2j_eb-0,2j/propagation.png
    :width: 65%
    :align: center

The chain can be viewed as a conductor in the condensed-matter language (no gap between the negative and positive energies). The spectrum (blue dots) displays the particle-hole symmetry (the eigenenergies :math:`E_n` can be written as :math:`\pm |E_n|`).

The eigenenergies are real. The chain displays the PT-symmetry.

There is no states of zero energy and the polarization shows that all the states of the chain are equaly distributed on each sublattice, :math:`\langle A|A \rangle=\langle B|B \rangle=1/2`.

.. note::

    The PT-symmetry can be sonpaneously broken by increasing both absorption and amplification, pairs of complex-conjugate eigenenergies will then appear.
