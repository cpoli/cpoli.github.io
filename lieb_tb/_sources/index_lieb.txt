.. lieb_tb documentation master file, created by
   sphinx-quickstart on Sun Apr 26 17:06:48 2015.
   You can adapt this file completely to your liking, but it should at least contain the root `toctree` directive.

Tight-Binding Lieb Lattice
==========================

**lieb_tb** is a package providing a Python implementation of a face centered square lattice within the tight-binding framework. It can be used to build up and solve tight-binding models with complex valued onsite energies and/or hoppings. As such, this package can be used to analyze the concepts of Parity-Time symmetry, Parity-Time symmetry breaking, zero-modes, and topologically protection.

.. toctree::
    :hidden:

    about
    code
    examples




Installation
------------

**lieb_tb** is available at https://github.com/cpoli/lieb_tb

To use **lieb_tb**,  you need to install the programming language python and four additional packages:

    * python 3.x
    * numpy
    * scipy
    * matplotlib
    * ffmpeg (to save the animation in .mp4)



Quick example
-------------

This example shows how to define a finite Lieb lattice (face-centered square lattice) with 9 sites along the x and y directions. The alternating hoppings having a defect in the dimerization pattern along both directions. Below is the source code and  and some plots. Here you can find more `examples <examples.html>`_.



.. code-block:: python

    from lieb_tb import * # import lieb_tb model class
    from numpy import zeros

    lieb = lieb_tb(sites_x=9, sites_y=9, t_x=[1.5, 1.], t_y=[1.5, 1.],
                   e_a=0.25j, e_b=-0.25j, e_c=-0.25j)
    lieb.set_def_dim_x([4])
    lieb.set_def_dim_y([4])
    lieb.get_lattice_hop()
    lieb.plt_lattice(save=True)
    lieb.get_eig()
    lieb.plt_spec()
    lieb.get_states_selec()
    lieb.plt_states_selec(save=True)
    psi_init = zeros(lieb.sites)
    psi_init[4//2 * lieb.sites_abc_x+4] = 1.
    lieb.get_propagation(psi_init, dz=.2, steps=500)
    lieb.get_animation(save=True)
    lieb.plt_show()

.. image:: figs/nx9ny9_ta(1,5+0j)_tb(1+0j)_tc(1,5+0j)_td(1+0j)_ea0,25j_eb(-0-0,25j)_ec(-0-0,25j)/lattice_hop_dimDefx_4_dimDefy_4.png
    :width: 23%

.. image:: figs/nx9ny9_ta(1,5+0j)_tb(1+0j)_tc(1,5+0j)_td(1+0j)_ea0,25j_eb(-0-0,25j)_ec(-0-0,25j)/spec_dimDefx_4_dimDefy_4.png
    :width: 38%
.. image:: figs/nx9ny9_ta(1,5+0j)_tb(1+0j)_tc(1,5+0j)_td(1+0j)_ea0,25j_eb(-0-0,25j)_ec(-0-0,25j)/states_dimDefx_4_dimDefy_4.png
    :width: 38%

The following animation shows the time evolution of the probability density. Note that all the states of the system are absorbed except the localized centered at the crossing of the dimerization defect lines.

